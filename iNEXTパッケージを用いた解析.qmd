---
title: "iNEXTパッケージを用いた解析"
author: "加藤千尋"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

### iNEXTパッケージを用いた解析のコード

```{r}
# 関数の読み込み
library(tidyverse)
library(iNEXT)
library(vegan)

# データの読み込み
COI <- read_csv("data_raw/COICustom157bp/23111007_1COICustom157bp/4_相同性が高い生物種リスト(BLAST結果10位まで).csv")
trnL <- read_csv("data_raw/trnL-c_trnL-h-150bp/23111007_2trnL-c_trnL-h-150bp/4_相同性が高い生物種リスト(BLAST結果10位まで).csv")
```

```{r}
#| echo: false
#| layout-ncol: 2
# trnL、リード削除なし
trnL_inext <-
  trnL %>%
  select(ASV_ID:Tsudanum23_trnL) %>%
  column_to_rownames("ASV_ID") %>%
  iNEXT(q = 0, datatype = "abundance")
ggiNEXT(trnL_inext) +
  labs(title = "trnL")

# trnL、リード削除100以下
trnL_inext_100 <-
  trnL %>%
  select(ASV_ID:Tsudanum23_trnL) %>%
  column_to_rownames("ASV_ID") %>%
  filter(Shinmats23_trnL > 100 | Chiba23_trnL > 100 | Tsudanum23_trnL > 100) %>% 
  iNEXT(q = 0, datatype = "abundance")
ggiNEXT(trnL_inext_100) +
  labs(title = "trnL(リード数100以下のASVを削除)")
```

```{r}
#| echo: false
#| layout-ncol: 3

# COI、リード削除なし
COI_iNEXT <-
  COI %>%
  select(ASV_ID:Tsudanum23_ZBJ) %>%
  column_to_rownames("ASV_ID") %>%
  iNEXT(q = 0, datatype = "abundance")
ggiNEXT(COI_iNEXT) +
  labs(title = "COI")

# COI、リード削除10以下
COI_iNEXT_10 <-
  COI %>%
  select(ASV_ID:Tsudanum23_ZBJ) %>%
  column_to_rownames("ASV_ID") %>%
  filter(Shinmats23_ZBJ > 10 | Chiba23_ZBJ > 10 | Tsudanum23_ZBJ > 10) %>% 
  iNEXT(q = 0, datatype = "abundance")
ggiNEXT(COI_iNEXT_10) +
  labs(title = "COI(リード数10以下のASVを削除)")

# COI、リード削除100以下
COI_iNEXT_100 <-
  COI %>%
  select(ASV_ID:Tsudanum23_ZBJ) %>%
  column_to_rownames("ASV_ID") %>%
  filter(Shinmats23_ZBJ > 100 | Chiba23_ZBJ > 100 | Tsudanum23_ZBJ > 100) %>% 
  iNEXT(q = 0, datatype = "abundance")
ggiNEXT(COI_iNEXT_100) +
  labs(title = "COI(リード数100以下のASVを削除)")
```

### 各ASVと種の対応表

<https://docs.google.com/spreadsheets/d/1EByvbiL1dI2_A18lY3g3OqXs6lC_TgcriWWzxicqhlE/edit?usp=sharing>

### 各ASVの疑問点_trnL

-   ASV_003\
    上位10位の内9種がミズキ属、1種がGonocaryum属(目レベルで一致しない)\
    →注釈を付けてミズキ属の一種として記載

-   ASV_008\
    上位10位の中に1回TPA:asm(おそらく細菌？)が検出されている\
    →注釈を付けてVaccinium属の一種として記載

-   ASV_016\
    上位10位の内8種がヤマアジサイ、2種がサワアジサイとして検出されたが、サワアジサイはヤマアジサイの変種であるため、ヤマアジサイとして記載しても良いか確認\
    →ヤマアジサイとして記載(参考・「日本の野生植物第4巻」)

### 各ASVの疑問点_COI

-   ASV_005\
    生物技研のデータにはメイガ科の一種と書かれているが、DBで検索したところツトガ科Parapedisia属が出てくるため、分類の変更などがなかったか要確認してどちらで記載するか決めること\
    →
-   ASV_009\
    ミミズの分類について図鑑などで確認してから記載予定\
    →フトミミズ科で記載
-   ASV_017\
    上位10位の内9種がユスリカ科、1種が等脚目(目レベルで一致しない)\
    →注釈を付けてユスリカ科の一種として記載
-   ASV_136\
    COIでPCRしているにもかかわらず、植物のヘラオオバコが検出されている\
    →COIのPCRなので植物については除く(先輩の卒論を参照)

### 種同定表と対応させる

```{r}
# trnL
# ASV表の読み込み
ASV_trnL <- readxl::read_xlsx("data_raw/ASV.xlsx", sheet = "trnL対応表")

# trnLのnallow down
trnL_種対応 <- trnL %>%
  select(ASV_ID, Shinmats23_trnL, Chiba23_trnL, Tsudanum23_trnL) %>% 
  full_join(ASV_trnL, by=c("ASV_ID" = "ASV_ID"))

# 目単位で数える
trnL_種対応_目 <- trnL_種対応 %>% 
  count(目) 

# 目単位_新松戸
trnL_種対応_目s <- trnL_種対応 %>% 
  filter(Shinmats23_trnL > 0) %>% 
  count(目) 

# 目単位_千葉
trnL_種対応_目c <- trnL_種対応 %>% 
  filter(Chiba23_trnL > 0) %>% 
  count(目) 

# 目単位_津田沼
trnL_種対応_目t <- trnL_種対応 %>% 
  filter(Tsudanum23_trnL > 0) %>% 
  count(目)

# 科単位で数える
trnL_種対応_科 <- trnL_種対応 %>% 
  count(科)

# 科単位_新松戸
trnL_種対応_科s <- trnL_種対応 %>% 
  filter(Shinmats23_trnL > 0) %>% 
  count(科)

# 科単位_千葉
trnL_種対応_科c <- trnL_種対応 %>% 
  filter(Chiba23_trnL > 0) %>% 
  count(科)

# 科単位_津田沼
trnL_種対応_科t <- trnL_種対応 %>% 
  filter(Tsudanum23_trnL > 0) %>% 
  count(科)
```

```{r}
# COI
# ASV表の読み込み
ASV_COI <- readxl::read_xlsx("data_raw/ASV.xlsx", sheet = "COI対応表")

# COIのnallow down
COI_種対応 <- COI %>%
  select(ASV_ID, Shinmats23_ZBJ, Chiba23_ZBJ, Tsudanum23_ZBJ) %>% 
  full_join(ASV_COI, by=c("ASV_ID" = "ASV_ID"))

# 目単位で数える
COI_種対応_目 <- COI_種対応 %>% 
  group_by(目) %>% 
  tally()

# 目単位_新松戸
COI_種対応_目s <- COI_種対応 %>% 
  filter(Shinmats23_ZBJ > 0) %>% 
  group_by(目) %>% 
  tally()

# 目単位_千葉
COI_種対応_目c <- COI_種対応 %>% 
  filter(Chiba23_ZBJ > 0) %>% 
  group_by(目) %>% 
  tally()


# 目単位_津田沼
COI_種対応_目t <- COI_種対応 %>% 
  filter(Tsudanum23_ZBJ > 0) %>% 
  group_by(目) %>% 
  tally()

# 科単位で数える
COI_種対応_科 <- COI_種対応 %>% 
  group_by(科) %>% 
  tally()

# 科単位_新松戸
COI_種対応_科s <- COI_種対応 %>% 
  filter(Shinmats23_ZBJ > 0) %>% 
  group_by(科) %>% 
  tally()

# 科単位_千葉
COI_種対応_科c <- COI_種対応 %>% 
  filter(Chiba23_ZBJ > 0) %>% 
  group_by(科) %>% 
  tally()

# 科単位_津田沼
COI_種対応_科t <- COI_種対応 %>% 
  filter(Tsudanum23_ZBJ > 0) %>% 
  group_by(科) %>% 
  tally()
```

### Veganパッケージを用いた生物多様度の計算α

```{r}
#シャノン・ウィナーの生物多様度計算

sw計算trnL目 <- read_csv("data_raw/sw計算用trnL目.csv") %>%
  column_to_rownames("chiten")
vegan::diversity(sw計算trnL目, index = "shannon")

sw計算trnL科 <- read_csv("data_raw/sw計算用trnL科.csv") %>%
  column_to_rownames("chiten")
vegan::diversity(sw計算trnL科, index = "shannon")

sw計算COI目 <- read_csv("data_raw/sw計算用COI目.csv") %>%
  column_to_rownames("chiten")
vegan::diversity(sw計算COI目, index = "shannon")

sw計算COI科 <- read_csv("data_raw/sw計算用COI科.csv") %>%
  column_to_rownames("chiten")
vegan::diversity(sw計算COI科, index = "shannon")


```

### veganパッケージを用いた生物多様度の計算β

```{r}
j計算trnL目 <- read_csv("data_raw/sw計算用trnL目.csv") %>% 
  column_to_rownames("chiten")
vegan::vegdist(j計算trnL目, method = "jaccard")

j計算trnL科 <- read_csv("data_raw/sw計算用trnL科.csv") %>% 
  column_to_rownames("chiten")
vegan::vegdist(j計算trnL科, method = "jaccard")

j計算COI目 <- read_csv("data_raw/sw計算用COI目.csv") %>% 
  column_to_rownames("chiten")
vegan::vegdist(j計算COI目, method = "jaccard")

j計算COI科 <- read_csv("data_raw/sw計算用COI科.csv") %>% 
  column_to_rownames("chiten")
vegan::vegdist(j計算COI科, method = "jaccard")

```
